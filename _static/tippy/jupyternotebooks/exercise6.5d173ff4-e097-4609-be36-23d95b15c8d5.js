selector_to_html = {"a[href=\"#exercises-week-3-pointers-and-functions\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Exercises Week 3 Pointers and Functions<a class=\"headerlink\" href=\"#exercises-week-3-pointers-and-functions\" title=\"Permalink to this heading\">#</a></h1>", "a[href=\"#exerciseex61\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex61\">\n<p class=\"admonition-title\">Exercise  5A  </p>\n<section id=\"exercise-content\">\n<p>Write a program that asks for two integers, assigns the values to two variables, then creates pointers to those variables and adds the integers by dereferencing their pointers.</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex67\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex67\">\n<p class=\"admonition-title\">Exercise  5G  </p>\n<section id=\"exercise-content\">\n<p>Write a program that asks the user to type in a sentence and then calls a function that prints the sentence in reverse using recursion.</p>\n<p>Hint: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">std::getline()</span></code> to get the sentence. Then consider using the <code class=\"docutils literal notranslate\"><span class=\"pre\">subtr()</span></code> function from <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;string&gt;</span></code> - you will need to look than one up!</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex62\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex62\">\n<p class=\"admonition-title\">Exercise  5B  </p>\n<section id=\"exercise-content\">\n<p>Write a program that asks for two floating-point numbers and then calls a function by reference to calculate the first number raised to the power of the second number.</p>\n<p>Hint: Include <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;cmath&gt;</span></code> and use <code class=\"docutils literal notranslate\"><span class=\"pre\">pow()</span></code>.</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex65\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex65\">\n<p class=\"admonition-title\">Exercise  5E  </p>\n<section id=\"exercise-content\">\n<p>Write a program that asks the user to input two floating point numbers followed by an arithmetic operator (+, -, *, /).</p>\n<p>The program should have four separate functions to compute the basic arithmetic operations on a pair of floating-point numbers and a fifth function that will be called from <code class=\"docutils literal notranslate\"><span class=\"pre\">main()</span></code> that selects which arithmetic function to use based on the users choice of operator i.e. the function called by <code class=\"docutils literal notranslate\"><span class=\"pre\">main()</span></code> should have the details of which arithmetic function is to be called passed into it.</p>\n<p>Print a suitable response back to the user, providing the result.</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex66\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex66\">\n<p class=\"admonition-title\">Exercise  5F  </p>\n<section id=\"exercise-content\">\n<p>Consider this example of recursion - without running any code, try to determine the following:</p>\n<ol class=\"arabic simple\">\n<li><p>What happens for the following function calls:</p></li>\n</ol>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">myFunction(4);</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">myFunction(7);</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">myFunction(12);</span></code></p></li>\n</ul>\n<ol class=\"arabic simple\" start=\"2\">\n<li><p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">number</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></code> were replaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">number</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> what would be the result of the last 3 function calls be?</p></li>\n<li><p>What would happen if another <code class=\"docutils literal notranslate\"><span class=\"pre\">std::cout</span></code> statement was placed before the function call?</p></li>\n</ol>\n<div class=\"highlight-c++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">myFunction</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">myFunction</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"sc\">'\\n'</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex63\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex63\">\n<p class=\"admonition-title\">Exercise  5C  </p>\n<section id=\"exercise-content\">\n<p>Write a program to print all the permutations of the character array \u201cabcd\u201d.</p>\n<p>You should use functions and pass pointers to the characters.</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex68\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex68\">\n<p class=\"admonition-title\">Exercise  5H  </p>\n<section id=\"exercise-content\">\n<p>Without running this code - determine what the output will be.</p>\n<p>If you were happy with this program, please visit <a class=\"reference external\" href=\"https://www.ioccc.org/\">https://www.ioccc.org/</a> for lots more examples and hours of fun!!</p>\n<div class=\"highlight-c++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">obfuscatedArithmetic</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">++</span><span class=\"n\">one</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"o\">--</span><span class=\"n\">two</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">obfuscatedArithmetic</span><span class=\"p\">(</span><span class=\"n\">three</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\" \"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\" \"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"sc\">'\\n'</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>", "a[href=\"#exerciseex64\"]": "<div class=\"exercise dropdown admonition\" id=\"exerciseex64\">\n<p class=\"admonition-title\">Exercise  5D  </p>\n<section id=\"exercise-content\">\n<p>Write three functions that return the square of, the cube of, and half of a floating-point number.</p>\n<p>Write a single function that will print to the character stream the value returned by any of the above functions.</p>\n<p>Write a program that asks the user for a floating point number and uses the single printer function to print the square of, the cube of, and half of the user\u2019s floating-point number.</p>\n<div class=\"cell tag_remove-output tag_skip-execution docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-C++ notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Code</span><span class=\"w\"> </span><span class=\"n\">goes</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">....</span>\n</pre></div>\n</div>\n</div>\n</div>\n</section>\n</div>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false, theme: 'material', duration: [200, 100], delay: [200, 0],

            });
        };
    };
    console.log("tippy tips loaded!");
};
