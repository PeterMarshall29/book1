selector_to_html = {"a[href=\"#introduction-to-the-basic-structure-of-computer-program-written-in-the-c-language\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Introduction to the basic structure of computer program written in the C++ language.<a class=\"headerlink\" href=\"#introduction-to-the-basic-structure-of-computer-program-written-in-the-c-language\" title=\"Permalink to this heading\">#</a></h2><p><code class=\"docutils literal notranslate\"><span class=\"pre\">C++</span></code> is a compiled language.\nThe code in each of the <code class=\"docutils literal notranslate\"><span class=\"pre\">.cpp</span></code> (and <code class=\"docutils literal notranslate\"><span class=\"pre\">.h</span></code>) pages in your project is first converted to an object file, a file with a <code class=\"docutils literal notranslate\"><span class=\"pre\">.obj</span></code> ending (<code class=\"docutils literal notranslate\"><span class=\"pre\">.o</span></code>) if you are linux, by the compiler, which convers the basically readable <code class=\"docutils literal notranslate\"><span class=\"pre\">C++</span></code> code into machine language \u2013 in an object file.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">cpp</span></code> source code is platform agnostic \u2013 but the object and executable files are not portable amongst platforms \u2013 not even amongst generations.\nThe collection of object files are then linked together by the linker into an executable file;  <code class=\"docutils literal notranslate\"><span class=\"pre\">.exe</span></code> in windows or <code class=\"docutils literal notranslate\"><span class=\"pre\">.app</span></code> etc\u2026\nOther useful extensions: .lib for library files,  <code class=\"docutils literal notranslate\"><span class=\"pre\">.a</span></code> for archive file (similar to library), <code class=\"docutils literal notranslate\"><span class=\"pre\">.so</span></code> for shared object files (like libraries), <code class=\"docutils literal notranslate\"><span class=\"pre\">.c</span></code> for <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> source code,  <code class=\"docutils literal notranslate\"><span class=\"pre\">.cc</span></code> for <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> with classes,  <code class=\"docutils literal notranslate\"><span class=\"pre\">.hpp</span></code> for header for cpp not also c.</p><p>Header files with a .h, .hpp or .hxx extension,  are sources files that containing entity declarations and/or definitions that need to be visible to multiple\u00a0translation units\u00a0(see below).\nEach file with the extension .c, .cpp or .cxx defines a\u00a0translation unit.\nThe C and C++ compilers only compile a single file at a time.\nSource files may include header files, which are substituted in place for the #include statement and other directives by the preprocessor, resulting in a single \u201cfile\u201d which is then fed to the compiler.\nThe source file must contain all type and all object declarations that are referenced, which is the meaning of the undeclared reference compiler error.\nNote that it only requires complete\u00a0declarations\u00a0to succeed; definitions are handled at a later stage in the build process.\nResource files are things like pictures, bitmaps, mp</p>", "a[href=\"glossary.html#term-Entities\"]": "<dt id=\"term-Entities\">Entities</dt><dd><p>The entities of a C++ program are values, objects, references, functions, enumerators, types, class members, templates, template specializations, and namespaces. ECS consists of three main parts:</p></dd>", "a[href=\"glossary.html#term-Objects\"]": "<dt id=\"term-Objects\">Objects</dt><dd></dd>", "a[href=\"#the-c-language\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The C++ Language<a class=\"headerlink\" href=\"#the-c-language\" title=\"Permalink to this heading\">#</a></h1><p><a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/C++\">Wiki</a> The C++ language is one of the most powerful programming languages available today. It was created by Danish computer scientist <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\">Tippy.Wiki Bjarne Stroustrup</a> and first released in 1985.</p><p>C++ is widely used, high level, general purpose language that can write code to runs from the glass (building apps with graphical user interfaces) down to the metal (direct control of hardware and manipulation of memory).</p>", "a[href=\"glossary.html#term-Declaration\"]": "<dt id=\"term-Declaration\">Declaration</dt><dd><p>Declarations introduce names into a C++ program. Each kind of entity is declared differently.</p></dd>", "a[href=\"#structure-of-c-programmes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Structure of C++ Programmes<a class=\"headerlink\" href=\"#structure-of-c-programmes\" title=\"Permalink to this heading\">#</a></h2><p>This section provides definitions for the specific terminology and the concepts used when describing the C++ programming language.</p><p>A C++ program is a sequence of text files (typically header and source files) that contain <a class=\"reference internal\" href=\"glossary.html#term-Declaration\"><span class=\"xref std std-term\">declaration</span></a>s.\nThe declarations are statements written in the C++ language.</p>", "a[href=\"https://en.cppreference.com/w/\"]": "<p>The Official C++ Standard Reference Documentation</p>", "a[href=\"https://en.cppreference.com/w/cpp/language/history.html\"]": "<p>Description of the evolution of C++ language</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 300, interactive: false, theme: 'transparent', duration: [200, 100], delay: [200, 0],

            });
        };
    };
    console.log("tippy tips loaded!");
};
