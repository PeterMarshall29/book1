selector_to_html = {"a[href=\"#break\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code><a class=\"headerlink\" href=\"#break\" title=\"Permalink to this heading\">#</a></h3><p><code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> - cause the program to break out of the nearest enclosing <a class=\"reference internal\" href=\"glossary.html#term-Switch-Statement\"><span class=\"xref std std-term\">switch statement</span></a> or <a class=\"reference internal\" href=\"glossary.html#term-Iteration-Statement\"><span class=\"xref std std-term\">iteration statement</span></a> . <code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> is used if the logical flow may require the program to leave the loop in the middle.</p><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> is usually found as an option in a selection-statement within the loop.</p>", "a[href=\"#while-loops\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">While Loops<a class=\"headerlink\" href=\"#while-loops\" title=\"Permalink to this heading\">#</a></h1><p>As an example of iteration, consider the first program ever to run on a\nstored-program computer (the EDSAC). It was written and run by David Wheeler\nin the computer laboratory in Cambridge University, England, on May 6, 1949,\nto calculate and print a simple list of squares like this:\nIts generally better to use for loops in C++, but while loops exist too.</p>", "a[href=\"#continue\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code><a class=\"headerlink\" href=\"#continue\" title=\"Permalink to this heading\">#</a></h3>", "a[href=\"#goto\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Goto<a class=\"headerlink\" href=\"#goto\" title=\"Permalink to this heading\">#</a></h3><p><code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> statements are best avoided in most programming languages. Code has a simpler structure, and is more easily obtained without the use of <code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code>.</p>", "a[href=\"glossary.html#term-Iteration-Statement\"]": "<dt id=\"term-Iteration-Statement\">Iteration Statement</dt><dd><p>terations statements include the <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>-statement, the <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>-statement and the <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span></code>-statement; used to repeat the execution of a block of code until a condition is met or changes.</p></dd>", "a[href=\"#loop-exit\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Loop Exit<a class=\"headerlink\" href=\"#loop-exit\" title=\"Permalink to this heading\">#</a></h2><p>If the condition of an iteration statement is forgotten the loop will run until the program crashes - this can tie up a computer for a very long time.</p><p>The iteration condition may also be intentially omitted, provided there is an alternaive method provided to end the loop.</p>", "a[href=\"#my-fig-ref-t1\"]": "<figure class=\"align-default\" id=\"my-fig-ref-t1\">\n<img alt=\"../_images/programmingloops.svg\" src=\"../_images/programmingloops.svg\"/><figcaption>\n<p><span class=\"caption-number\">Fig. 1 </span><span class=\"caption-text\">My figure title.</span><a class=\"headerlink\" href=\"#my-fig-ref-t1\" title=\"Permalink to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"glossary.html#term-Switch-Statement\"]": "<dt id=\"term-Switch-Statement\">Switch Statement</dt><dd><p>Def</p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false, theme: 'material', duration: [200, 100], delay: [200, 0],

            });
        };
    };
    console.log("tippy tips loaded!");
};
