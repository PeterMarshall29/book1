selector_to_html = {"a[href=\"jupyternotebooks/introduction_to_functions.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Functions<a class=\"headerlink\" href=\"#functions\" title=\"Link to this heading\">#</a></h1><p>We define a function when we want a separate computation with a name because doing so:</p>", "a[href=\"jupyternotebooks/introduction_to_pointers.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Pointers<a class=\"headerlink\" href=\"#pointers\" title=\"Link to this heading\">#</a></h1><p>A pointer should always point at an object, so that dereferencing it is valid. When we don\u2019t have an object to point to or if we need to represent the notion of \u2018\u2018no object available\u2019\u2019 (e.g., for an end of a list), we give the pointer the value nullptr (\u2018\u2018the null pointer\u2019\u2019). There is only one nullptr shared by all pointer types:\n\u00a0\nNullptr is of type pointer.\n\u00a0\nA reference is similar to a pointer.</p><p>But instead, we put the suffix &amp; after the type in the declaration, and do not need the * to access the value.\nReferences cannot be redirected, they only refer to one object.</p>", "a[href=\"jupyternotebooks/introduction_to_cpp_in_vscode.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">C++ in Visual Studio<a class=\"headerlink\" href=\"#c-in-visual-studio\" title=\"Link to this heading\">#</a></h1><h2>Creating your first project in Visual Studio.<a class=\"headerlink\" href=\"#creating-your-first-project-in-visual-studio\" title=\"Link to this heading\">#</a></h2><p>Select Create a new project.</p><p>Under All Languages, choose c++.</p>", "a[href=\"jupyternotebooks/header_files.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Header Files<a class=\"headerlink\" href=\"#header-files\" title=\"Link to this heading\">#</a></h1><p>Sometime a pcp.h will be created in the project \u2013 this is a precompiled header file.\nTo create your own header file. Click in headers, new module, header file.\nThe new file will contain, #pragma once, which is an instruction that this file is only compiled the first time it is used, saving time in future builds.\nNow add:\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\nAnd replace  #include <iostream> with  #include #include \u201cMyHeader.h\u201d.</iostream></cmath></algorithm></vector></string></iostream></p>", "a[href=\"jupyternotebooks/approachs_to_learning.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">How to Learn C++<a class=\"headerlink\" href=\"#how-to-learn-c\" title=\"Link to this heading\">#</a></h1><p>Growth mind set bit</p>", "a[href=\"jupyternotebooks/firstprogram.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">First C++ Program<a class=\"headerlink\" href=\"#first-c-program\" title=\"Link to this heading\">#</a></h1><p>The first program that most people ever write prints \u201cHello, World!\u201d the first program that most people ever write, because it is traditionally the first one taught - printing words to screen is as simple as it gets, but proves the software is correctly installed.</p>", "a[href=\"jupyternotebooks/input_and_output.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Input and Output<a class=\"headerlink\" href=\"#input-and-output\" title=\"Link to this heading\">#</a></h1><p>An \u2018object\u2019 is a region of memory with a \u2018type\u2019 that specifies what kind of information can be placed in it.\nA \u2018named object\u2019 is called a variable.\nA variable is declared by stating its \u2018type\u2019 followed by its \u2018name\u2019 followed by \u2018;\u2019.\nTry this code\nint main()\n{\nstd::cout&lt;&lt;\u201cPlease type your surname!\\n\u201d;\nstd::string surname;\nstd::cin &gt;&gt; surname;\nstd::cout &lt;&lt; \u201cHello, \u201c &lt;&lt; surname &lt;&lt; \u201c!\\n\u201d;\nreturn 0;\n}</p>", "a[href=\"jupyternotebooks/data_types.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">C++ Data Types<a class=\"headerlink\" href=\"#c-data-types\" title=\"Link to this heading\">#</a></h1><p>An identifier is an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, and most Unicode characters.</p><p>The first character of a valid identifier must be one of the following:</p>", "a[href=\"jupyternotebooks/iteration.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Iteration<a class=\"headerlink\" href=\"#iteration\" title=\"Link to this heading\">#</a></h1><p>As an example of iteration, consider the first program ever to run on a stored-program computer (the EDSAC).</p><p>It was written and run by David Wheeler in the computer laboratory in Cambridge University, England, on May 6, 1949, to calculate and print a simple list of squares like this:</p>", "a[href=\"jupyternotebooks/glossary.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Glossary<a class=\"headerlink\" href=\"#glossary\" title=\"Link to this heading\">#</a></h1>", "a[href=\"jupyternotebooks/codingtheory3.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Coding Theory 3<a class=\"headerlink\" href=\"#coding-theory-3\" title=\"Link to this heading\">#</a></h1>", "a[href=\"jupyternotebooks/the_cpp_language.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The C++ Language<a class=\"headerlink\" href=\"#the-c-language\" title=\"Link to this heading\">#</a></h1><p>Start with ideas like syntax\u2026</p><p>All the `C++ language syntax is detailed here: <a class=\"reference external\" href=\"https://en.cppreference.com/w/\">cppreference.com</a></p>", "a[href=\"jupyternotebooks/introduction_to_programming.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Introduction to Computer Programming<a class=\"headerlink\" href=\"#introduction-to-computer-programming\" title=\"Link to this heading\">#</a></h1><p>Start with ideas like syntax\u2026</p>", "a[href=\"jupyternotebooks/logical_selection.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Logical Selection<a class=\"headerlink\" href=\"#logical-selection\" title=\"Link to this heading\">#</a></h1><p>Expressions\nC++ C++ language Expressions\nAn expression is a sequence of operators and their operands, that specifies a computation.</p><p>Expression evaluation may produce a result (e.g., evaluation of 2 + 2 produces the result 4) and may generate side-effects (e.g. evaluation of std::printf(\u201c%d\u201d, 4) prints the character \u20184\u2019 on the standard output).</p>", "a[href=\"#introducton-to-the-c-programming-language\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Introducton to the C++ Programming Language<a class=\"headerlink\" href=\"#introducton-to-the-c-programming-language\" title=\"Link to this heading\">#</a></h1><p>This book covers the introductory weeks of Computational Physics A - C++ programming basics at Loughbourough University.</p><p>NOTE - We will transition to Visual Studio in week 3.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false, theme: 'material', duration: [200, 100], delay: [200, 500],

            });
        };
    };
    console.log("tippy tips loaded!");
};
