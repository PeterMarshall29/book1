selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/C%2B%2B\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/320px-ISO_C%2B%2B_Logo.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>C++</b> is a high-level, general-purpose programming language created by Danish computer scientist Bjarne Stroustrup. First released in 1985 as an extension of the C programming language, adding object-oriented (OOP) features, it has since expanded significantly over time adding more OOP and other features; as of 1997/C++98 standardization, C++ has added functional features, in addition to facilities for low-level memory manipulation for systems like microcomputers or to make operating systems like Linux or Windows, and even later came features like generic programming. C++ is usually implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Embarcadero, Oracle, and IBM.</p>", "a[href^=\"https://en.wikipedia.org/wiki/C%2B%2B#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/320px-ISO_C%2B%2B_Logo.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>C++</b> is a high-level, general-purpose programming language created by Danish computer scientist Bjarne Stroustrup. First released in 1985 as an extension of the C programming language, adding object-oriented (OOP) features, it has since expanded significantly over time adding more OOP and other features; as of 1997/C++98 standardization, C++ has added functional features, in addition to facilities for low-level memory manipulation for systems like microcomputers or to make operating systems like Linux or Windows, and even later came features like generic programming. C++ is usually implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Embarcadero, Oracle, and IBM.</p>", "a[href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Bjarne_Stroustrup_%282013%29.jpg/330px-Bjarne_Stroustrup_%282013%29.jpg\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>Bjarne Stroustrup</b> is a Danish computer scientist, known for the development of the C++ programming language. He led the Large-scale Programming Research department at Bell Labs, served as a professor of computer science at Texas A&amp;M University, and spent over a decade at Morgan Stanley while also being a visiting professor at Columbia University. Since 2022 he has been a full professor at Columbia.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Bjarne_Stroustrup_%282013%29.jpg/330px-Bjarne_Stroustrup_%282013%29.jpg\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>Bjarne Stroustrup</b> is a Danish computer scientist, known for the development of the C++ programming language. He led the Large-scale Programming Research department at Bell Labs, served as a professor of computer science at Texas A&amp;M University, and spent over a decade at Morgan Stanley while also being a visiting professor at Columbia University. Since 2022 he has been a full professor at Columbia.</p>", "a[href=\"glossary.html#term-Executable-File\"]": "<dt id=\"term-Executable-File\">Executable File</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">.exe</span></code> or other file types that contain machine code computer programmes that run directly on the computers processor.</p></dd>", "a[href=\"glossary.html#term-Object-files\"]": "<dt id=\"term-Object-files\">Object files</dt><dd><p>The file produced by a compiler - the result of compiling a source file</p></dd>", "a[href=\"glossary.html#term-Heap\"]": "<dt id=\"term-Heap\">Heap</dt><dd><p>(the-) is a region of memory used for dynamic memory allocation. Unlike the stack, the heap is managed manually by the programmer or automatically by a garbage collector.</p></dd>", "a[href=\"glossary.html#term-Translation-unit\"]": "<dt id=\"term-Translation-unit\">Translation unit</dt><dd><p>Part of a program that can be separately compiled. Individual source, or header, files.</p></dd>", "a[href=\"#the-c-language\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The C++ Language<a class=\"headerlink\" href=\"#the-c-language\" title=\"Permalink to this heading\">#</a></h1><p>The <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/C%2B%2B\">C++</a> language is one of the most powerful programming languages available today. It was created by Danish computer scientist <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\">Bjarne_Stroustrup</a> and first released in 1985.</p><p>C++ is widely used, high-level, general-purpose language that can write code to runs from the glass (building apps with graphical user interfaces) down to the metal (direct control of hardware and manipulation of memory).</p>", "a[href=\"glossary.html#term-Compiler\"]": "<dt id=\"term-Compiler\">Compiler</dt><dd><p>The part of a C++ implementation that produces object code from a translation unit. More generally compilers transform source code into other types of code, but most often into native machine code that is interpreted directly by the <a class=\"reference internal\" href=\"#term-CPU\"><span class=\"xref std std-term\">CPU</span></a>.</p></dd>", "a[href=\"glossary.html#term-Stack\"]": "<dt id=\"term-Stack\">Stack</dt><dd></dd>", "a[href=\"glossary.html#term-Free-store\"]": "<dt id=\"term-Free-store\">Free store</dt><dd><p><a class=\"reference internal\" href=\"#term-Memory\"><span class=\"xref std std-term\">memory</span></a> allocated by <code class=\"docutils literal notranslate\"><span class=\"pre\">new</span></code>; also called <a class=\"reference internal\" href=\"#term-Dynamic-Memory\"><span class=\"xref std std-term\">dynamic memory</span></a>. Dynamic memory is an amount of memory of indeterminate size used up during execution of a program as new objects are created. Often standard library facilities, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>, can be used to avoid explicit use of free store.</p></dd>", "a[href=\"glossary.html#term-Compiled-Language\"]": "<dt id=\"term-Compiled-Language\">Compiled Language</dt><dd><p>Programming languages that are converted directly into machine code, creating programmes that can be executed by the computer processor. Alternative is an interpreted language, where the source code is interpreted a line at a time by the interpreter at run time \u2013 these programmes run inside larger programmes written in a compiled language including C, JAVA, and C++.</p></dd>", "a[href=\"glossary.html#term-Resource-files\"]": "<dt id=\"term-Resource-files\">Resource files</dt><dd><p>Non code files, such as image files, required by the program.</p></dd>", "a[href=\"#structure-of-the-c-language\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Structure of the C++ Language<a class=\"headerlink\" href=\"#structure-of-the-c-language\" title=\"Permalink to this heading\">#</a></h2><p>In the <code class=\"docutils literal notranslate\"><span class=\"pre\">C++</span></code> programming language, consist of two parts: the <strong><a class=\"reference internal\" href=\"glossary.html#term-Core-Language\"><span class=\"xref std std-term\">core language</span></a></strong> and the <strong><a class=\"reference internal\" href=\"glossary.html#term-Standard-Library\"><span class=\"xref std std-term\">standard library</span></a></strong>.</p><p>The <strong>C++ Standard Library</strong> is a collection of classes and functions, which are written in the <strong>core language</strong>.</p>", "a[href=\"#structure-of-c-programmes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Structure of C++ Programmes<a class=\"headerlink\" href=\"#structure-of-c-programmes\" title=\"Permalink to this heading\">#</a></h2><p>A C++ program is a sequence of text files written in the human-readable C++ language, with file endings such as <code class=\"docutils literal notranslate\"><span class=\"pre\">.cpp</span></code> for source files and <code class=\"docutils literal notranslate\"><span class=\"pre\">.h</span></code> for header files.</p><p>Each C++ language file is called a <a class=\"reference internal\" href=\"glossary.html#term-Translation-unit\"><span class=\"xref std std-term\">translation unit</span></a>, contains a series of declarations. Each <a class=\"reference internal\" href=\"glossary.html#term-Declaration\"><span class=\"xref std std-term\">declaration</span></a> is a statement written in the C++ language, which together form a program.</p>", "a[href=\"glossary.html#term-Definitions\"]": "<dt id=\"term-Definitions\">Definitions</dt><dd><p>Definitions are declarations that are sufficient to use the entity identified by the name.</p></dd>", "a[href=\"glossary.html#term-Declaration\"]": "<dt id=\"term-Declaration\">Declaration</dt><dd><p>Declarations introduce names into a C++ program. Each kind of entity is declared differently.</p></dd>", "a[href=\"glossary.html#term-Declarations\"]": "<dt id=\"term-Declarations\">Declarations</dt><dd><p>Declarations introduce names into a C++ program. Each kind of entity is declared differently.</p></dd>", "a[href=\"glossary.html#term-Linker\"]": "<dt id=\"term-Linker\">Linker</dt><dd><p>The part of the C++ implementation that merges the code generated from separately compiled translation units into a program. or part of a program</p></dd>", "a[href=\"glossary.html#term-Core-Language\"]": "<dt id=\"term-Core-Language\">Core Language</dt><dd><p>The fundamental components of the C++ language not found in the Standard Library. The libraries are constructed from the core language.</p></dd>", "a[href=\"glossary.html#term-Standard-Library\"]": "<dt id=\"term-Standard-Library\">Standard Library</dt><dd><p>Collection of facilities (classes and functions) available for inclusion into C++ programs \u2013 separated into namespaces.</p></dd>", "a[href=\"glossary.html#term-Dynamic-Memory\"]": "<dt id=\"term-Dynamic-Memory\">Dynamic Memory</dt><dd><p>Memory that is allocated during runtime using <code class=\"docutils literal notranslate\"><span class=\"pre\">new</span></code>; and deallocated using <code class=\"docutils literal notranslate\"><span class=\"pre\">delete</span></code>. A computer\u2019s RAM must be large enough to accomodate all the objects created during run-time.</p></dd>", "a[href=\"glossary.html#term-Static-Memory\"]": "<dt id=\"term-Static-Memory\">Static Memory</dt><dd><p>Memory allocated by the <a class=\"reference internal\" href=\"#term-Linker\"><span class=\"xref std std-term\">linker</span></a></p></dd>", "a[href=\"glossary.html#term-Translation-units\"]": "<dt id=\"term-Translation-units\">Translation units</dt><dd><p>Part of a program that can be separately compiled. Individual source, or header, files.</p></dd>", "a[href=\"https://en.cppreference.com/w/cpp/language/history.html\"]": "<p>Description of the evolution of C++ language</p>", "a[href=\"https://en.cppreference.com/w/\"]": "<p>The Official C++ Standard Reference Documentation</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false, theme: 'material', duration: [200, 100], delay: [200, 0],

            });
        };
    };
    console.log("tippy tips loaded!");
};
