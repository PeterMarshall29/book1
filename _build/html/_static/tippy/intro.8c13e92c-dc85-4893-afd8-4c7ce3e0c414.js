selector_to_html = {"a[href=\"jupyternotebooks/introduction_to_programming.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Introduction to Computer Programming<a class=\"headerlink\" href=\"#introduction-to-computer-programming\" title=\"Permalink to this heading\">#</a></h1><h2>Computer Programs<a class=\"headerlink\" href=\"#computer-programs\" title=\"Permalink to this heading\">#</a></h2><p>Computer programs are everywhere - not just inside computers.\nYour digital watch (if you are still wearing a watch!), calculator, smart speaker, and car are running <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Embedded-Programs\"><span class=\"xref std std-term\">embedded programs</span></a>.</p><p>A computer programme is a set of instructions that tells a computer (and other devices) what to do.</p>", "a[href=\"jupyternotebooks/introduction_to_functions.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Functions<a class=\"headerlink\" href=\"#functions\" title=\"Permalink to this heading\">#</a></h1><p>Programmers often want to use the same <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Code-Block\"><span class=\"xref std std-term\">code-block</span></a> repeatedly - in the same program, or across many programmes.</p><p>A code-block can be made reusable by encapsulating it into a function.</p>", "a[href=\"jupyternotebooks/firstprogram.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">First C++ Program<a class=\"headerlink\" href=\"#first-c-program\" title=\"Permalink to this heading\">#</a></h1><p>The first program that most people ever write prints \u201cHello, World!\u201d the first program that most people ever write, because it is traditionally the first one taught - printing words to screen is as simple as it gets, but proves the software is correctly installed.</p>", "a[href=\"jupyternotebooks/solutions_to_exercises.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Solutions to Exercises<a class=\"headerlink\" href=\"#solutions-to-exercises\" title=\"Permalink to this heading\">#</a></h1>", "a[href=\"jupyternotebooks/coding_best_practices.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Best Practices in Coding<a class=\"headerlink\" href=\"#best-practices-in-coding\" title=\"Permalink to this heading\">#</a></h1><p>The aim of any programmer should be to write programs with code that is easy to maintain and easy for other programmers to reuse.</p><p>Badly written code is:</p>", "a[href=\"jupyternotebooks/introduction_to_cpp_in_vscode.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">C++ in Visual Studio<a class=\"headerlink\" href=\"#c-in-visual-studio\" title=\"Permalink to this heading\">#</a></h1><p>Visual Studio is a comprehensive Integrated Development Environment (IDE) developed by Microsoft - we will be using the community edition for much of this module.</p><p>VS is designed to facilitate the entire software development lifecycle, from writing and editing code to debugging, building, and deploying applications.</p>", "a[href=\"jupyternotebooks/approachs_to_learning.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">How to Learn C++<a class=\"headerlink\" href=\"#how-to-learn-c\" title=\"Permalink to this heading\">#</a></h1><p>Growth mind set bit\u2026</p><p>Practice, Practice, Practice\u2026</p>", "a[href=\"jupyternotebooks/objects_values_variables_and_constants.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Objects, Values, Variables, and Constants<a class=\"headerlink\" href=\"#objects-values-variables-and-constants\" title=\"Permalink to this heading\">#</a></h1><p>The C++ language is composed of a large number of <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Entities\"><span class=\"xref std std-term\">entities</span></a>, including: <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Values\"><span class=\"xref std std-term\">values</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Objects\"><span class=\"xref std std-term\">objects</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-References\"><span class=\"xref std std-term\">references</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Functions\"><span class=\"xref std std-term\">functions</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Enumerations\"><span class=\"xref std std-term\">enumerations</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Types\"><span class=\"xref std std-term\">types</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Class-Members\"><span class=\"xref std std-term\">class members</span></a>, <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Templates\"><span class=\"xref std std-term\">templates</span></a>, and <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Namespaces\"><span class=\"xref std std-term\">namespaces</span></a> (and a few more advanced examples).</p><p>The individual examples of each entity needed by a program are introduced by a <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Declaration\"><span class=\"xref std std-term\">declaration</span></a>, which associates each one with a unique <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Identifier\"><span class=\"xref std std-term\">identifier</span></a> and defines its <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Type\"><span class=\"xref std std-term\">type</span></a>.</p>", "a[href=\"jupyternotebooks/selection_and_iteration.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Selection and Iteration<a class=\"headerlink\" href=\"#selection-and-iteration\" title=\"Permalink to this heading\">#</a></h1><p>Selection and iteration statements are control flow statements - they control the sequential flow of the execution of a programme.</p><p>The <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Control-Flow\"><span class=\"xref std std-term\">control flow</span></a> refers to the order in which all its statements are executed.</p>", "a[href=\"jupyternotebooks/the_cpp_language.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The C++ Language<a class=\"headerlink\" href=\"#the-c-language\" title=\"Permalink to this heading\">#</a></h1><p>The <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/C%2B%2B\">C++</a> language is one of the most powerful programming languages available today. It was created by Danish computer scientist <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\">Bjarne_Stroustrup</a> and first released in 1985.</p><p>C++ is widely used, high-level, general-purpose language that can write code to runs from the glass (building apps with graphical user interfaces) down to the metal (direct control of hardware and manipulation of memory).</p>", "a[href=\"jupyternotebooks/glossary.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Glossary<a class=\"headerlink\" href=\"#glossary\" title=\"Permalink to this heading\">#</a></h1>", "a[href=\"jupyternotebooks/header_files.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Header Files<a class=\"headerlink\" href=\"#header-files\" title=\"Permalink to this heading\">#</a></h1><p>Sometime a pcp.h will be created in the project \u2013 this is a precompiled header file.\nTo create your own header file. Click in headers, new module, header file.\nThe new file will contain, #pragma once, which is an instruction that this file is only compiled the first time it is used, saving time in future builds.\nNow add:\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\nAnd replace  #include <iostream> with  #include #include \u201cMyHeader.h\u201d.</iostream></cmath></algorithm></vector></string></iostream></p>", "a[href=\"jupyternotebooks/input_and_output.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Input and Output<a class=\"headerlink\" href=\"#input-and-output\" title=\"Permalink to this heading\">#</a></h1><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;iostream&gt;</span></code> component of the <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Standard-Library\"><span class=\"xref std std-term\">standard library</span></a> provides the tools used to interact with programmes, using the keyboard and computer display for input and output.</p><p>These basic functions are vital to learning programming because they enable the programmer to follow the progress of a programme\u2019s execution - without some output to the display you will have little insight into what the program is doing.</p>", "a[href=\"#introducton-to-the-c-programming-language\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Introducton to the C++ Programming Language<a class=\"headerlink\" href=\"#introducton-to-the-c-programming-language\" title=\"Permalink to this heading\">#</a></h1><p>This book covers the introductory weeks of Computational Physics A - C++ programming basics at Loughbourough University.</p><p>NOTE - We will transition to Visual Studio in week 3.</p>", "a[href=\"jupyternotebooks/introduction_to_pointers.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Pointers<a class=\"headerlink\" href=\"#pointers\" title=\"Permalink to this heading\">#</a></h1><p>An <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Object\"><span class=\"xref std std-term\">object</span></a> in C++ is a region of memory holding a value. Each region of memory can also be identified by its <a class=\"reference internal\" href=\"jupyternotebooks/glossary.html#term-Memory-Address\"><span class=\"xref std std-term\">memory address</span></a>.</p><p>The value of an object can be accessed using either its identifier, or its address. Reference to an object\u2019s address, instead of its value, can make a program more efficient, and access to memory addresses is useful for memory management.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false, theme: 'material', duration: [200, 100], delay: [200, 0],

            });
        };
    };
    console.log("tippy tips loaded!");
};
